{
  "network_configuration": {
    "default_enable_cis_checks": false,
    "network_configuration_categories": {
      "oke": {
        "category_compartment_id": "CMP-LZP-P-NETWORK-KEY",
        "vcns": {
          "VCN-FRA-LZP-P-PLATFORM-OKE-KEY": {
            "block_nat_traffic": false,
            "cidr_blocks": [
              "10.0.80.0/21"
            ],
            "display_name": "vcn-fra-lzp-p-platform-oke",
            "dns_label": "vcnfralzppoke",
            "is_attach_drg": false,
            "is_create_igw": false,
            "is_ipv6enabled": false,
            "is_oracle_gua_allocation_enabled": false,
            "security_lists": {
              "SL-PROD-OKE-PODS-KEY": {
                "display_name": "sl-01-lzp-p-platform-oke-pods",
                "egress_rules": [
                  {
                    "description": "ICMP type 3 code 4 for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "icmp_type": 3,
                    "icmp_code": 4,
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP type 3 code 4 for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "icmp_type": 3,
                    "icmp_code": 4,
                    "stateless": false
                  }
                ]
              },
              "SL-PROD-OKE-WORKERS-KEY": {
                "display_name": "sl-02-lzp-p-platform-oke-workers",
                "egress_rules": [
                  {
                    "description": "ICMP type 3 code 4 for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "icmp_type": 3,
                    "icmp_code": 4,
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP type 3 code 4 for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "icmp_type": 3,
                    "icmp_code": 4,
                    "stateless": false
                  }
                ]
              },
              "SL-PROD-INT-LB-KEY": {
                "display_name": "sl-03-lzp-d-platform-oke-lb",
                "egress_rules": [],
                "ingress_rules": []
              },
              "SL-PROD-OKE-CP-KEY": {
                "display_name": "sl-04-lzp-p-platform-oke-cp",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP type 3 code 4 for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "icmp_type": 3,
                    "icmp_code": 4,
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP type 3 code 4 for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "icmp_type": 3,
                    "icmp_code": 4,
                    "stateless": false
                  }
                ]
              }
            },
            "network_security_groups": {
              "NSG-PROD-CP": {
                "display_name": "nsg-prod-cp",
                "egress_rules": {
                  "nsg_pods": {
                    "description": "Allow TCP egress from OKE control plane to pods",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-PODS",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_workers_12250": {
                    "description": "Allow TCP egress for path discovery to worker nodes",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_workers_10250": {
                    "description": "Allow TCP egress for path discovery to worker nodes",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "dst_port_min": "10250",
                    "dst_port_max": "10250",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_workers_icmp": {
                    "description": "Allow ICMP egress from OKE control plane to worker nodes",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "protocol": "ICMP",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow TCP egress for Kubernetes control plane inter-communication",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_service": {
                    "description": "Allow TCP egress from OKE control plane to OCI services",
                    "dst": "all-services",
                    "dst_type": "SERVICE_CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  }
                },
                "ingress_rules": {
                  "nsg_pods_12250": {
                    "description": "Allow TCP ingress from pods to kube-apiserver",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PODS",
                    "protocol": "TCP",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "stateless": false
                  },
                  "nsg_pods_6443": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PODS",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_workers_6443": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_workers_12250": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_workers_icmp": {
                    "description": "Allow ICMP ingress for path discovery from worker nodes",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow TCP ingress to kube-apiserver from 0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "src": "0.0.0.0/0",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  }
                }
              },
              "NSG-PROD-INT-LB": {
                "display_name": "nsg-prod-lb",
                "egress_rules": {
                  "nsg_workers": {
                    "description": "Allow TCP egress from public load balancers to workers nodes for NodePort traffic",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "30000",
                    "dst_port_max": "32767",
                    "stateless": false
                  },
                  "nsg_workers_30000_32767": {
                    "description": "Allow TCP egress from public load balancers to worker nodes for health checks",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "10256",
                    "dst_port_max": "10256",
                    "stateless": false
                  },
                  "nsg_workers_ICMP": {
                    "description": "Allow ICMP egress from public load balancers to worker nodes for path discovery",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "stateless": false
                  }
                },
                "ingress_rules": {}
              },
              "NSG-PROD-WORKERS": {
                "display_name": "nsg-prod-workers",
                "egress_rules": {
                  "anywhere": {
                    "description": "Allow ALL egress from workers to internet",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_pods": {
                    "description": "Allow ALL egress from workers to other pods",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-PODS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL egress from workers for cross-node pod communication when using NodePorts or hostNetwork: true",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow TCP egress from workers to Kubernetes API server",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_cp_10250": {
                    "description": "Allow TCP egress from workers to OKE control plane",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "10250",
                    "dst_port_max": "10250",
                    "stateless": false
                  },
                  "nsg_cp_12250": {
                    "description": "Allow TCP ingress to workers for health check from OKE control plane",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP egress from workers for path discovery",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "stateless": false
                  },
                  "nsg_service": {
                    "description": "Allow TCP egress from workers to OCI Services",
                    "dst": "all-services",
                    "dst_type": "SERVICE_CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  }
                },
                "ingress_rules": {
                  "nsg_pods": {
                    "description": "Allow ALL ingress to workers from other pods",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PODS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_cp": {
                    "description": "Allow ALL ingress to workers from Kubernetes control plane for webhooks served by workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-CP",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_cp_10256": {
                    "description": "Allow TCP ingress to workers for a health check from OKE control plane",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-INT-LB",
                    "protocol": "TCP",
                    "dst_port_min": "10256",
                    "dst_port_max": "10256",
                    "stateless": false
                  },
                  "nsg_pub_lb_30000_30000": {
                    "description": "Allow TCP ingress to workers from public load balancers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-INT-LB",
                    "protocol": "TCP",
                    "dst_port_min": "30000",
                    "dst_port_max": "32767",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP ingress to pods for path discovery",
                    "src_type": "CIDR_BLOCK",
                    "src": "0.0.0.0/0",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  }
                }
              },
              "NSG-PROD-PODS": {
                "display_name": "nsg-prod-pods",
                "egress_rules": {
                  "anywhere": {
                    "description": "Allow ALL egress from pods to internet",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_pods": {
                    "description": "Allow ALL egress from pods to other pods",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-PODS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL egress from pods for cross-node pod communication when using NodePorts or hostNetwork: true",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow TCP egress from pods to Kubernetes API server",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP egress from pods for path discovery",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "stateless": false
                  },
                  "nsg_service": {
                    "description": "Allow TCP egress from pods to OCI Services",
                    "dst": "all-services",
                    "dst_type": "SERVICE_CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  }
                },
                "ingress_rules": {
                  "nsg_pods": {
                    "description": "Allow ALL ingress to pods from other pods",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PODS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL ingress to pods for cross-node pod communication when using NodePorts or hostNetwork: true",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_cp": {
                    "description": "Allow ALL ingress to pods from Kubernetes control plane for webhooks served by pods",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-CP",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP ingress to pods for path discovery",
                    "src_type": "CIDR_BLOCK",
                    "src": "0.0.0.0/0",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  }
                }
              }
            },
            "route_tables": {
              "RT-PROD-OKE-WORKERS-KEY": {
                "display_name": " rt-fra-lzp-p-workers",
                "route_rules": {
                  "sgw_route": {
                    "network_entity_key": "SGW-PROD-OKE-KEY",
                    "description": "Route for sgw",
                    "destination": "all-services",
                    "destination_type": "SERVICE_CIDR_BLOCK"
                  }
                }
              },
              "RT-PROD-OKE-PODS-KEY": {
                "display_name": " rt-fra-lzp-p-pods",
                "route_rules": {
                  "sgw_route": {
                    "network_entity_key": "SGW-PROD-OKE-KEY",
                    "description": "Route for sgw",
                    "destination": "all-services",
                    "destination_type": "SERVICE_CIDR_BLOCK"
                  }
                }
              },
              "RT-PROD-OKE-CP-KEY": {
                "display_name": " rt-fra-lzp-p-cp",
                "route_rules": {
                  "sgw_route": {
                    "network_entity_key": "SGW-PROD-OKE-KEY",
                    "description": "Route for sgw",
                    "destination": "all-services",
                    "destination_type": "SERVICE_CIDR_BLOCK"
                  }
                }
              },
              "RT-PROD-OKE-INT-LB-KEY": {
                "display_name": "rt-fra-lzp-p-lb",
                "route_rules": {
                  "sgw_route": {
                    "network_entity_key": "SGW-PROD-OKE-KEY",
                    "description": "Route for sgw",
                    "destination": "all-services",
                    "destination_type": "SERVICE_CIDR_BLOCK"
                  }
                }
              }
            },
            "subnets": {
              "SN-PROD-OKE-INT-LB-KEY": {
                "cidr_block": "10.0.80.0/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-lb",
                "dns_label": "snpplatmokelb",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-OKE-INT-LB-KEY",
                "security_list_keys": [
                  "SL-PROD-INT-LB-KEY"
                ]
              },
              "SN-PROD-OKE-CP-KEY": {
                "cidr_block": "10.0.80.128/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-cp",
                "dns_label": "snpplatokecp",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-OKE-CP-KEY",
                "security_list_keys": [
                  "SL-PROD-OKE-CP-KEY"
                ]
              },
              "SN-PROD-OKE-WORKERS-KEY": {
                "cidr_block": "10.0.82.0/23",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-workers",
                "dns_label": "snpplatokework",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-OKE-WORKERS-KEY",
                "security_list_keys": [
                  "SL-PROD-OKE-WORKERS-KEY"
                ]
              },
              "SN-PROD-OKE-PODS-KEY": {
                "cidr_block": "10.0.84.0/23",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-pods",
                "dns_label": "snpplatokepods",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-OKE-PODS-KEY",
                "security_list_keys": [
                  "SL-PROD-OKE-PODS-KEY"
                ]
              }
            },
            "vcn_specific_gateways": {
              "service_gateways": {
                "SGW-PROD-OKE-KEY": {
                  "display_name": "sg-fra-lzp-prod-oke",
                  "services": "all-services"
                }
              }
            }
          }
        },
        "non_vcn_specific_gateways": {
          "inject_into_existing_drgs": {
            "DRG-KEY": {
              "drg_key": "DRG-FRA-LZP-HUB-KEY",
              "drg_attachments": {
                "DRG-VCN-OKE-PROD-KEY": {
                  "display_name": "drgatt-vcn-fra-lzp-p-platform-oke",
                  "drg_route_table_key": "DRGRT-FRA-LZP-SPOKES-KEY",
                  "network_details": {
                    "attached_resource_key": "VCN-FRA-LZP-P-PLATFORM-OKE-KEY",
                    "type": "VCN"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
