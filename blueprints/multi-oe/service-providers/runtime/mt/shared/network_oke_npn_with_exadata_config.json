{
  "network_configuration": {
    "default_compartment_id"          : "CUSTOMERS-DEV-CMP",
    "default_enable_cis_checks"       : true,

    "network_configuration_categories": {
      "DEV": {
        "vcns"                     : {
          "OKE-VCN": {
            "display_name"                    : "oke-dev-vcn",
            "block_nat_traffic"               : false,
            "dns_label"                       : "okedevvcn",
            "is_ipv6enabled"                  : false,
            "is_oracle_gua_allocation_enabled": false,

            "cidr_blocks"                     : [
              "10.0.128.0/22"
            ],

            "network_security_groups"         : {
              "EXACS-BACKUP-NSG"    : {
                "display_name"      : "exacs-backup-nsg",

                "EGRESS-TO-OSN-RULE": {
                  "description" : "Allows HTTPS connections to Oracle Services Network (OSN).",
                  "protocol"    : "TCP",
                  "dst"         : "objectstorage",
                  "dst_port_max": 443,
                  "dst_port_min": 443,
                  "dst_type"    : "SERVICE_CIDR_BLOCK",
                  "stateless"   : false
                }
              },

              "OKE-VCN-API-NSG"     : {
                "display_name" : "api-nsg",

                "egress_rules" : {
                  "EGRESS-TO-ANYWHERE": {
                    "description": "Allows egress to anywhere.",
                    "protocol"   : "TCP",
                    "dst"        : "0.0.0.0/0",
                    "dst_type"   : "CIDR_BLOCK",
                    "stateless"  : false
                  }
                },

                "ingress_rules": {
                  "INGRESS-FROM-API-API-RULE"          : {
                    "description" : "Allows TCP ingress for Kubernetes control plane inter-communication.",
                    "protocol"    : "TCP",
                    "dst_port_max": 6443,
                    "dst_port_min": 6443,
                    "src"         : "OKE-VCN-API-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-MGMT-SUBNET-RULE"      : {
                    "description" : "Allows ingress to OKE APIs from hosts used to manage the cluster: app-operator-subnet in mgmt plane's mgmt-vcn.",
                    "protocol"    : "TCP",
                    "dst_port_max": 6443,
                    "dst_port_min": 6443,
                    "src"         : "192.168.0.80/28",
                    "src_type"    : "CIDR_BLOCK",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-PODS-12250-API-RULE"   : {
                    "description" : "Pod to Kubernetes API endpoint communication (when using VCN-native pod networking)",
                    "protocol"    : "TCP",
                    "dst_port_max": 12250,
                    "dst_port_min": 12250,
                    "src"         : "OKE-VCN-PODS-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-PODS-6443-API-RULE"    : {
                    "description" : "Pod to Kubernetes API endpoint communication (when using VCN-native pod networking)",
                    "protocol"    : "TCP",
                    "dst_port_max": 6443,
                    "dst_port_min": 6443,
                    "src"         : "OKE-VCN-PODS-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-WORKERS-ICMP-API-RULE" : {
                    "description": "Allows ICMP ingress for path discovery from worker nodes.",
                    "protocol"   : "ICMP",
                    "icmp_code"  : 4,
                    "icmp_type"  : 3,
                    "src"        : "OKE-VCN-WORKERS-NSG",
                    "src_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  },

                  "INGRESS-FROM-WORKERS-NSG-10250-RULE": {
                    "description" : "Allows ingress from worker nodes (control plane health checks).",
                    "protocol"    : "TCP",
                    "dst_port_max": 10250,
                    "dst_port_min": 10250,
                    "src"         : "OKE-VCN-WORKERS-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-WORKERS-NSG-12250-RULE": {
                    "description" : "Allows ingress from worker nodes.",
                    "protocol"    : "TCP",
                    "dst_port_max": 12250,
                    "dst_port_min": 12250,
                    "src"         : "OKE-VCN-WORKERS-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-WORKERS-NSG-6443-RULE" : {
                    "description" : "Allows ingress from worker nodes.",
                    "protocol"    : "TCP",
                    "dst_port_max": 6443,
                    "dst_port_min": 6443,
                    "src"         : "OKE-VCN-WORKERS-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  }
                }
              },

              "OKE-VCN-DATA-NSG"    : {
                "display_name" : "exacs-client-nsg",

                "egress_rules" : {
                  "EGRESS-TO-ONS-RULE"   : {
                    "description" : "Allows Oracle Notification Services (ONS) communication to hosts in Client NSG for Fast Application Notifications (FAN).",
                    "protocol"    : "TCP",
                    "dst"         : "OKE-VCN-DATA-NSG",
                    "dst_port_max": 6200,
                    "dst_port_min": 6200,
                    "dst_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "EGRESS-TO-OSN-RULE"   : {
                    "description" : "Allows HTTPS connections to Oracle Services Network (OSN).",
                    "protocol"    : "TCP",
                    "dst"         : "all-services",
                    "dst_port_max": 443,
                    "dst_port_min": 443,
                    "dst_type"    : "SERVICE_CIDR_BLOCK",
                    "stateless"   : false
                  },

                  "EGRESS-TO-SQLNET-RULE": {
                    "description" : "Allows SQLNet connections to hosts in Client NSG.",
                    "protocol"    : "TCP",
                    "dst"         : "OKE-VCN-DATA-NSG",
                    "dst_port_max": 1522,
                    "dst_port_min": 1521,
                    "dst_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "EGRESS-TO-SSH-RULE"   : {
                    "description" : "Allows SSH connections to hosts in Client NSG.",
                    "protocol"    : "TCP",
                    "dst"         : "OKE-VCN-DATA-NSG",
                    "dst_port_max": 22,
                    "dst_port_min": 22,
                    "dst_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  }
                },

                "ingress_rules": {
                  "INGRESS-FROM-MGMT-SUBNET-RULE"  : {
                    "description" : "Allows ingress to SSH from hosts used to manage the cluster: db-operator-subnet in mgmt plane's mgmt-vcn.",
                    "protocol"    : "TCP",
                    "dst_port_max": 22,
                    "dst_port_min": 22,
                    "src"         : "192.168.0.96/28",
                    "src_type"    : "CIDR_BLOCK",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-ONS-CLIENT-RULE"   : {
                    "description" : "Allows Oracle Notification Services (ONS) communication from hosts in Client NSG for Fast Application Notifications (FAN).",
                    "protocol"    : "TCP",
                    "dst_port_max": 6200,
                    "dst_port_min": 6200,
                    "src"         : "OKE-VCN-DATA-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-PODS-NSG-RULE"     : {
                    "description": "Allows ingress from OKE pods.",
                    "protocol"   : "TCP",
                    "src"        : "OKE-VCN-PODS-NSG",
                    "src_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  },

                  "INGRESS-FROM-SQLNET-CLIENT-RULE": {
                    "description" : "Allows SQLNet connections from hosts in Client NSG.",
                    "protocol"    : "TCP",
                    "dst_port_max": 1522,
                    "dst_port_min": 1521,
                    "src"         : "OKE-VCN-DATA-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-SSH-CLIENT-RULE"   : {
                    "description" : "Allows SSH connections from hosts in Client NSG.",
                    "protocol"    : "TCP",
                    "dst_port_max": 22,
                    "dst_port_min": 22,
                    "src"         : "OKE-VCN-DATA-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-WORKERS-NSG-RULE"  : {
                    "description": "Allows ingress from worker nodes.",
                    "protocol"   : "TCP",
                    "src"        : "OKE-VCN-WORKERS-NSG",
                    "src_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  }
                }
              },

              "OKE-VCN-PODS-NSG"    : {
                "display_name" : "pods-nsg",

                "egress_rules" : {
                  "EGRESS-TO-API-12250-RULE"   : {
                    "description" : "Allows TCP egress from pods to OKE control plane.",
                    "protocol"    : "TCP",
                    "dst"         : "OKE-VCN-API-NSG",
                    "dst_port_max": 12250,
                    "dst_port_min": 12250,
                    "dst_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "EGRESS-TO-API-RULE"         : {
                    "description" : "Allows TCP egress from pods to Kubernetes API server.",
                    "protocol"    : "TCP",
                    "dst"         : "OKE-VCN-API-NSG",
                    "dst_port_max": 6443,
                    "dst_port_min": 6443,
                    "dst_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "EGRESS-TO-DATA-RULE"        : {
                    "description": "Allows pods to communicate with data layer.",
                    "protocol"   : "TCP",
                    "dst"        : "OKE-VCN-DATA-NSG",
                    "dst_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  },

                  "EGRESS-TO-ICMP-RULE"        : {
                    "description": "Path Discovery.",
                    "protocol"   : "ICMP",
                    "dst"        : "all-services",
                    "dst_type"   : "SERVICE_CIDR_BLOCK",
                    "icmp_code"  : 4,
                    "icmp_type"  : 3,
                    "stateless"  : false
                  },

                  "EGRESS-TO-PODS-RULE"        : {
                    "description": "Allows pods to communicate with other pods.",
                    "protocol"   : "ALL",
                    "dst"        : "OKE-VCN-PODS-NSG",
                    "dst_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  },

                  "EGRESS-TO-SERVICES-TCP-RULE": {
                    "description": "Allows TCP egress from pods to OCI Services.",
                    "protocol"   : "TCP",
                    "dst"        : "all-services",
                    "dst_type"   : "SERVICE_CIDR_BLOCK",
                    "stateless"  : false
                  }
                },

                "ingress_rules": {
                  "INGRESS-FROM-API-RULE"    : {
                    "description": "Allows Kubernetes API endpoint to communicate with pods.",
                    "protocol"   : "ALL",
                    "src"        : "OKE-VCN-API-NSG",
                    "src_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  },

                  "INGRESS-FROM-WORKERS-RULE": {
                    "description": "Allows worker nodes to access pods.",
                    "protocol"   : "ALL",
                    "src"        : "OKE-VCN-WORKERS-NSG",
                    "src_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  },

                  "INGRESS-TO-PODS-RULE"     : {
                    "description": "Allows pods to communicate with other pods.",
                    "protocol"   : "ALL",
                    "src"        : "OKE-VCN-PODS-NSG",
                    "src_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  }
                }
              },

              "OKE-VCN-SERVICES-NSG": {
                "display_name" : "services-nsg",

                "egress_rules" : {
                  "EGRESS-TO-ANYWHERE": {
                    "description": "Allows egress to anywhere.",
                    "protocol"   : "TCP",
                    "dst"        : "0.0.0.0/0",
                    "dst_type"   : "CIDR_BLOCK",
                    "stateless"  : false
                  }
                },

                "ingress_rules": {
                  "INGRESS-FROM-CENTRAL-HUB-VCN-LBR-SUBNET-RULE": {
                    "description": "Allows ingress from Central Hub VCN's LBR subnet.",
                    "protocol"   : "TCP",
                    "src"        : "192.168.0.0/29",
                    "src_type"   : "CIDR_BLOCK",
                    "stateless"  : false
                  }
                }
              },

              "OKE-VCN-WORKERS-NSG" : {
                "display_name" : "workers-nsg",

                "egress_rules" : {
                  "EGRESS-TO-ANYWHERE": {
                    "description": "Allows egress to anywhere.",
                    "protocol"   : "TCP",
                    "dst"        : "0.0.0.0/0",
                    "dst_type"   : "CIDR_BLOCK",
                    "stateless"  : false
                  }
                },

                "ingress_rules": {
                  "INGRESS-FROM-ANYWHERE-ICMP-WORKERS-RULE"    : {
                    "description": "Allows ICMP ingress to workers for path discovery.",
                    "protocol"   : "ICMP",
                    "icmp_code"  : 4,
                    "icmp_type"  : 3,
                    "src"        : "0.0.0.0/0",
                    "src_type"   : "CIDR_BLOCK",
                    "stateless"  : false
                  },

                  "INGRESS-FROM-MGMT-SUBNET-RULE"              : {
                    "description" : "Allows ingress to SSH from hosts used to manage the cluster: app-operator-subnet in mgmt plane's mgmt-vcn.",
                    "protocol"    : "TCP",
                    "dst_port_max": 22,
                    "dst_port_min": 22,
                    "src"         : "192.168.0.80/28",
                    "src_type"    : "CIDR_BLOCK",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-OKE-API-RULE"                  : {
                    "description": "Allows ingress from OKE control plane for webhooks served by workers.",
                    "protocol"   : "ALL",
                    "src"        : "OKE-VCN-API-NSG",
                    "src_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  },

                  "INGRESS-FROM-SERVICES-NSG-HEALTH-CHECK-RULE": {
                    "description" : "Allows ingress from load balancers for health checks.",
                    "protocol"    : "TCP",
                    "dst_port_max": 10256,
                    "dst_port_min": 10256,
                    "src"         : "OKE-VCN-SERVICES-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-SERVICES-NSG-RULE"             : {
                    "description" : "Allows ingress from load balancers for NodePort traffic.",
                    "protocol"    : "TCP",
                    "dst_port_max": 32767,
                    "dst_port_min": 30000,
                    "src"         : "OKE-VCN-SERVICES-NSG",
                    "src_type"    : "NETWORK_SECURITY_GROUP",
                    "stateless"   : false
                  },

                  "INGRESS-FROM-WORKERS-NODE-RULE"             : {
                    "description": "Allows ingress from worker nodes.",
                    "protocol"   : "ALL",
                    "src"        : "OKE-VCN-WORKERS-NSG",
                    "src_type"   : "NETWORK_SECURITY_GROUP",
                    "stateless"  : false
                  }
                }
              }
            },

            "route_tables"                    : {
              "DRG-ONLY-ROUTE": {
                "display_name": "drg-only-route-table",

                "route_rules" : {
                  "DRG-RULE": {
                    "description"       : "Traffic goes to DRG.",
                    "destination"       : "0.0.0.0/0",
                    "destination_type"  : "CIDR_BLOCK",
                    "network_entity_key": "CENTRAL-HUB-DRG"
                  }
                }
              },

              "DRG-OSN-ROUTE" : {
                "display_name": "drg-osn-route-table",

                "route_rules" : {
                  "DRG-RULE": {
                    "description"       : "Traffic goes to DRG.",
                    "destination"       : "0.0.0.0/0",
                    "destination_type"  : "CIDR_BLOCK",
                    "network_entity_key": "CENTRAL-HUB-DRG"
                  },

                  "OSN-RULE": {
                    "description"       : "Traffic goes to Service Gateway.",
                    "destination"       : "all-services",
                    "destination_type"  : "SERVICE_CIDR_BLOCK",
                    "network_entity_key": "SERVICE-GATEWAY"
                  }
                }
              },

              "OSN-ONLY-ROUTE": {
                "display_name": "osn-only-route-table",

                "route_rules" : {
                  "OSN-RULE": {
                    "description"       : "Traffic goes to Service Gateway.",
                    "destination"       : "all-services",
                    "destination_type"  : "SERVICE_CIDR_BLOCK",
                    "network_entity_key": "SERVICE-GATEWAY"
                  }
                }
              }
            },

            "security_lists"                  : {
              "EXACS-CLIENT-SUBNET-SL": {
                "display_name" : "exacs-client-subnet-security-list",

                "egress_rules" : [
                  {
                    "description" : "Allows SSH connections to hosts in Exadata client subnet.",
                    "protocol"    : "TCP",
                    "dst"         : "10.0.130.0/25",
                    "dst_port_max": 22,
                    "dst_port_min": 22,
                    "dst_type"    : "CIDR_BLOCK",
                    "stateless"   : false
                  },
                  {
                    "description": "Allows the initiation of ICMP connections to hosts in Exadata client subnet.",
                    "protocol"   : "ICMP",
                    "dst"        : "10.0.130.0/25",
                    "dst_type"   : "CIDR_BLOCK",
                    "icmp_code"  : 4,
                    "icmp_type"  : 3,
                    "stateless"  : false
                  }
                ],

                "ingress_rules": [
                  {
                    "description" : "Allows SSH connections from hosts in Exadata client subnet.",
                    "protocol"    : "TCP",
                    "dst_port_max": 22,
                    "dst_port_min": 22,
                    "src"         : "10.0.130.0/25",
                    "src_type"    : "CIDR_BLOCK",
                    "stateless"   : false
                  }
                ]
              }
            },

            "subnets"                         : {
              "EXA-BACKUP-SUBNET"      : {
                "display_name"             : "exacs-backup-subnet",
                "cidr_block"               : "10.0.130.128/26",
                "dhcp_options_key"         : "default_dhcp_options",
                "dns_label"                : "exacsbackup",
                "prohibit_internet_ingress": true,
                "route_table_key"          : "OSN-ONLY-ROUTE",
                "ipv6cidr_blocks"          : []
              },

              "OKE-VCN-API-SUBNET"     : {
                "display_name"             : "api-subnet",
                "cidr_block"               : "10.0.129.192/29",
                "dhcp_options_key"         : "default_dhcp_options",
                "dns_label"                : "api",
                "prohibit_internet_ingress": true,
                "route_table_key"          : "DRG-ONLY-ROUTE",
                "ipv6cidr_blocks"          : []
              },

              "OKE-VCN-DATA-SUBNET"    : {
                "display_name"             : "data-subnet",
                "cidr_block"               : "10.0.130.0/25",
                "dhcp_options_key"         : "default_dhcp_options",
                "dns_label"                : "data",
                "prohibit_internet_ingress": true,
                "route_table_key"          : "DRG-OSN-ROUTE",
                "ipv6cidr_blocks"          : [],

                "security_list_keys"       : [
                  "EXACS-CLIENT-SUBNET-SL"
                ]
              },

              "OKE-VCN-PODS-SUBNET"    : {
                "display_name"             : "pods-subnet",
                "cidr_block"               : "10.0.128.0/24",
                "dhcp_options_key"         : "default_dhcp_options",
                "dns_label"                : "pods",
                "prohibit_internet_ingress": true,
                "route_table_key"          : "DRG-ONLY-ROUTE",
                "ipv6cidr_blocks"          : []
              },

              "OKE-VCN-SERVICES-SUBNET": {
                "display_name"             : "services-subnet",
                "cidr_block"               : "10.0.129.128/26",
                "dhcp_options_key"         : "default_dhcp_options",
                "dns_label"                : "services",
                "prohibit_internet_ingress": true,
                "route_table_key"          : "DRG-ONLY-ROUTE",
                "ipv6cidr_blocks"          : []
              },

              "OKE-VCN-WORKERS-SUBNET" : {
                "display_name"             : "workers-subnet",
                "cidr_block"               : "10.0.129.0/25",
                "dhcp_options_key"         : "default_dhcp_options",
                "dns_label"                : "workers",
                "prohibit_internet_ingress": true,
                "route_table_key"          : "DRG-OSN-ROUTE",
                "ipv6cidr_blocks"          : []
              }
            },

            "vcn_specific_gateways"           : {
              "service_gateways": {
                "SERVICE-GATEWAY": {
                  "display_name": "oke-dev-vcn-service-gateway",
                  "services"    : "all-services"
                }
              }
            }
          }
        },

        "non_vcn_specific_gateways": {
          "inject_into_existing_drgs": {
            "OKE-CENTRAL-HUB-DRG-INJECT": {
              "drg_id"                 : "CENTRAL-HUB-DRG",

              "drg_attachments"        : {
                "OKE-VCN-ATTACH": {
                  "display_name"       : "oke-dev-vcn-attachment",
                  "drg_route_table_key": "OKE-VCN-DRG-ROUTE",

                  "network_details"    : {
                    "type"                 : "VCN",
                    "attached_resource_key": "OKE-VCN"
                  }
                }
              },

              "drg_route_distributions": {
                "OKE-VCN-IMPORT-ROUTE-DISTRIBUTION": {
                  "display_name"     : "oke-dev-vcn-route-distribution",
                  "distribution_type": "IMPORT",

                  "statements"       : {
                    "OKE-VCN-TO-CENTRAL-HUB-VCN-STMT": {
                      "action"        : "ACCEPT",
                      "priority"      : 1,

                      "match_criteria": {
                        "attachment_type"   : "VCN",
                        "drg_attachment_key": "CENTRAL-HUB-VCN-ATTACH",
                        "match_type"        : "DRG_ATTACHMENT_ID"
                      }
                    }
                  }
                }
              },

              "drg_route_tables"       : {
                "OKE-VCN-DRG-ROUTE": {
                  "display_name"                     : "oke-dev-vcn-drg-route-table",
                  "import_drg_route_distribution_key": "OKE-VCN-IMPORT-ROUTE-DISTRIBUTION"
                }
              }
            }
          }
        }
      }
    }
  }
}
